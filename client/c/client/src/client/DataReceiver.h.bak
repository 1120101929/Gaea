/*
 * DataReceiver.h
 *
 * Created on: 2011-7-5
 * Author: Service Platform Architecture Team (spat@58.com)
 */

#ifndef DATARECEIVER_H_
#define DATARECEIVER_H_
#include "SocketPool.h"
#include <pthread.h>
#include <map>
namespace gaea {
class DataReceiver {
public:
	static DataReceiver* GetInstance();
	void registerSocket(int fd, SocketPool *socketPool);
	void unRegisterSocket(int fd);
	virtual ~DataReceiver();
	static void socketReadData(void *arg);
	int getEpfd() const;
private:
	DataReceiver();
	static void* epollReadData(void *arg);
	static DataReceiver *dataReceiver;
	static pthread_mutex_t mutex;
	static std::map<int, SocketPool*> *socketMap;
	int epfd;
	pthread_t ntid;
};
}
#endif /* DATARECEIVER_H_ */
