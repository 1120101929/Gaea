/*
 * SocketPool.h
   *
 * Created on: 2011-7-5
 * Author: Service Platform Architecture Team (spat@58.com)
 */

#ifndef SOCKETPOOL_H_
#define SOCKETPOOL_H_
#include "SocketPoolProfile.h"
#include <pthread.h>
#include <list>
namespace gaea {
class SocketPool {
public:
	SocketPool(char *hostName, int port, SocketPoolProfile *config);
	virtual ~SocketPool();
	int getSocket();
	void releaseSocket(int fd);
	void closeSocket(int fd);
	void closeAllSocket();
private:
	std::list<int> *csocketQueue;
	pthread_mutex_t queueMutex;
	size_t maxPoolSize;
	size_t minPoolSize;
	char *hostName;
	int port;
	size_t minFreeCount;
	size_t socketCount;
	time_t lastCheckTime;
	int shrinkInterval;
	SocketPoolProfile *config;
	int queuePop();
};
}
#endif /* SOCKETPOOL_H_ */

